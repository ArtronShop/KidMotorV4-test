{"config.json":"{\"mode\":\"code\",\"github\":null,\"board\":\"kidmotor-v4\",\"level\":\"Beginner\"}","main.py":"from machine import Pin\nimport motor\nfrom time import sleep, ticks_ms\nimport servo\n\nlast_motor_ticks = 0\nmotor_state = 0\ndef motor_loop():\n    global last_motor_ticks, motor_state\n    if (ticks_ms() - last_motor_ticks) >= 500:\n        if motor_state == 0:\n            motor.move(motor.FORWARD, 50)\n        elif motor_state == 1:\n            motor.move(motor.FORWARD, 100)\n        elif motor_state == 2:\n            motor.move(motor.BACKWARD, 50)\n        elif motor_state == 3:\n            motor.move(motor.BACKWARD, 100)\n        elif motor_state == 4:\n            motor.move(motor.TURN_LEFT, 100)\n        elif motor_state == 5:\n            motor.move(motor.TURN_RIGHT, 100)\n        elif motor_state == 6:\n            motor.stop()\n        motor_state = motor_state + 1\n        if motor_state > 6:\n            motor_state = 0\n        last_motor_ticks = ticks_ms()\n\nlast_led_ticks = 0\nled_state = 0\nleds = [ 10, 11, 12, 26, 27 ]\ndef led_loop():\n    global last_led_ticks, led_state\n    if (ticks_ms() - last_led_ticks) >= 100:\n        Pin(leds[4 if led_state == 0 else led_state - 1], Pin.OUT).value(0)\n        Pin(leds[led_state], Pin.OUT).value(1)\n        led_state = led_state + 1\n        if led_state > 4:\n            led_state = 0\n        last_led_ticks = ticks_ms()\n\n\nlast_servo_ticks = 0\nservo_state = 0\ndef servo_loop():\n    global last_servo_ticks, servo_state\n    if (ticks_ms() - last_servo_ticks) >= 1000:\n        if servo_state == 0:\n            servo.angle(servo.SV1, 0)\n            servo.angle(servo.SV2, 180)\n            servo.angle(servo.SV3, 180)\n        elif servo_state == 1:\n            servo.angle(servo.SV1, 90)\n            servo.angle(servo.SV2, 90)\n            servo.angle(servo.SV3, 0)\n        elif servo_state == 2:\n            servo.angle(servo.SV1, 180)\n            servo.angle(servo.SV2, 0)\n            servo.angle(servo.SV3, 90)\n        servo_state = servo_state + 1\n        if servo_state > 2:\n            servo_state = 0\n        last_servo_ticks = ticks_ms()\n\nwhile True:\n    motor_loop()\n    led_loop()\n    servo_loop()\n    sleep(0.1)\n"}